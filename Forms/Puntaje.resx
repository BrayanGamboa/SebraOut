<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>